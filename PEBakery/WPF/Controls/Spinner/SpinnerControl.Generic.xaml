<!--
    Copyright 2012 lapthorn.net.

    This software is provided "as is" without a warranty of any kind. All
    express or implied conditions, representations and warranties, including
    any implied warranty of merchantability, fitness for a particular purpose
    or non-infringement, are hereby excluded. lapthorn.net and its licensors
    shall not be liable for any damages suffered by licensee as a result of
    using the software. In no event will lapthorn.net be liable for any
    lost revenue, profit or data, or for direct, indirect, special,
    consequential, incidental or punitive damages, however caused and regardless
    of the theory of liability, arising out of the use of or inability to use
    software, even if lapthorn.net has been advised of the possibility of
    such damages.

    From https://www.codeproject.com/Articles/315461/A-WPF-Spinner-Custom-Control v1.02
    Licensed under The Code Project Open License (CPOL) 1.02
    CPOL 1.02 : https://www.codeproject.com/info/cpol10.aspx
    
    Created by Barry Lapthorn, Modified by Hajin Jang
-->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:custom="clr-namespace:PEBakery.WPF.Controls"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="d">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/PEBakery;component/WPF/Controls/Spinner/AllBrushes.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <Style TargetType="{x:Type custom:SpinnerControl}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type custom:SpinnerControl}">

                    <Grid Background="{Binding Path=Background, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ButtonWidth, Mode=OneWay}"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <!--
                            we use the TemplatedParent binding to get a reference to the control
                            this template has been applied to, so we can access the property on it
                        -->
                        <TextBox
                            Grid.Row="0" Grid.Column="0"
                            FontSize="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FontSize, Mode=OneWay}"
                            Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Height, Mode=OneWay}"
                            VerticalAlignment="Center"
                            VerticalContentAlignment="Center"
                            
                            Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, Mode=TwoWay}" />
                        <Grid x:Name="grid1"
                              Grid.Row="0" Grid.Column="1"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <RepeatButton Grid.Row="0"
                                          Grid.Column="1"
                                          Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ButtonHeight, Mode=OneWay}"
                                          Command="{x:Static custom:SpinnerControl.IncreaseCommand}">
                                <RepeatButton.Content>
                                    <Rectangle Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ArrowBrushWidth, Mode=OneWay}"
                                               Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ArrowBrushHeight, Mode=OneWay}"
                                               Fill="{StaticResource brush.scroll.up}" />
                                </RepeatButton.Content>
                            </RepeatButton>
                            <RepeatButton Grid.Row="1"
                                          Grid.Column="1"
                                          Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ButtonHeight, Mode=OneWay}"
                                          Command="{x:Static custom:SpinnerControl.DecreaseCommand}">
                                <RepeatButton.Content>
                                    <Rectangle Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ArrowBrushWidth, Mode=OneWay}"
                                               Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ArrowBrushHeight, Mode=OneWay}"
                                               Fill="{StaticResource brush.scroll.down}" />
                                </RepeatButton.Content>
                            </RepeatButton>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  Resource dictionary entries should be defined here.  -->
</ResourceDictionary>